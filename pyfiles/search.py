# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'search.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtSql import *
import sys
import register
import login
import Administrator_search
import jump_buy
import add_flight, change_flight, mytickets, change_fly,alter_info, change_plane
import change_plane_type, change_airport
import pyodbc

class Register_Window(QDialog, register.Ui_Dialog):
    def __init__(self, parent=None):
        super(Register_Window, self).__init__(parent)
        self.setupUi(self)

class Change_Fly_Window(QDialog, change_fly.Ui_Dialog):
    def __init__(self, parent=None):
        super(Change_Fly_Window, self).__init__(parent)
        self.setupUi(self)

class Change_Airport_Window(QDialog, change_airport.Ui_Dialog):
    def __init__(self, parent=None):
        super(Change_Airport_Window, self).__init__(parent)
        self.setupUi(self)

class Change_Plane_Window(QDialog, change_plane.Ui_Dialog):
    def __init__(self, parent=None):
        super(Change_Plane_Window, self).__init__(parent)
        self.setupUi(self)

class Change_Plane_Type_Window(QDialog, change_plane_type.Ui_Dialog):
    def __init__(self, parent=None):
        super(Change_Plane_Type_Window, self).__init__(parent)
        self.setupUi(self)

class Change_Flight_Window(QDialog, change_flight.Ui_Dialog):
    def __init__(self, parent=None):
        super(Change_Flight_Window, self).__init__(parent)
        self.setupUi(self)

class MyTickets_Window(QDialog, mytickets.Ui_Mytickets):
    def __init__(self, parent=None):
        super(MyTickets_Window, self).__init__(parent)
        self.setupUi(self)


class Login_Window(QDialog, login.Ui_Dialog):
    def __init__(self, parent=None):
        super(Login_Window, self).__init__(parent)
        self.setupUi(self)

class Alter_Info_Window(QDialog, alter_info.Ui_Dialog):
    def __init__(self, parent=None):
        super(Alter_Info_Window, self).__init__(parent)
        self.setupUi(self)

class Jump_Buy_Window(QDialog, jump_buy.Ui_Dialog_jump_buy):
    def __init__(self, parent=None):
        super(Jump_Buy_Window, self).__init__(parent)
        self.setupUi(self)


class Add_Flight_Window(QDialog, add_flight.Ui_Dialog):
    def __init__(self, parent=None):
        super(Add_Flight_Window, self).__init__(parent)
        self.setupUi(self)

class Ad_Search_Window(QDialog, Administrator_search.Ui_Dialog):
    def __init__(self, parent=None):
        super(Ad_Search_Window, self).__init__(parent)
        self.setupUi(self)

class Ui_MainWindow(object):
    state = -1  # 选中的票的状态，0为出发-目的，1为出发-经停，2为经停-目的，-1为未被选中
    username = ''
    num = -1  # 选中航程号
    index = -1
    power = 0  # 权限0为未登录，1为用户，2为管理员
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1600, 900)
        MainWindow.setMinimumSize(QtCore.QSize(567, 384))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../icon/flight.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("/**********子界面背景**********/\n"
                                 "QWidget#customWidget {\n"
                                 "        background: rgb(173, 202, 232);\n"
                                 "}\n"
                                 "\n"
                                 "/**********子界面中央背景**********/\n"
                                 "QWidget#centralwidget {\n"
                                 "        background: rgb(232, 241, 252);\n"
                                 "}\n"
                                 "\n"
                                 "/**********主界面样式**********/\n"
                                 "QWidget#mainWindow {\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        background: rgb(232, 241, 252);\n"
                                 "}\n"
                                 "\n"
                                 "QWidget#messageWidget {\n"
                                 "        background: rgba(173, 202, 232, 50%);\n"
                                 "}\n"
                                 "\n"
                                 "StyledWidget {\n"
                                 "        qproperty-normalColor: rgb(65, 65, 65);\n"
                                 "        qproperty-disableColor: rgb(180, 180, 180);\n"
                                 "        qproperty-highlightColor: rgb(0, 160, 230);\n"
                                 "        qproperty-errorColor: red;\n"
                                 "}\n"
                                 "\n"
                                 "QProgressIndicator {\n"
                                 "        qproperty-color: rgb(2, 65, 132);\n"
                                 "}\n"
                                 "\n"
                                 "/**********提示**********/\n"
                                 "QToolTip{\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        background: white;\n"
                                 "        color: rgb(51, 51, 51);\n"
                                 "}\n"
                                 "\n"
                                 "/**********菜单栏**********/\n"
                                 "QMenuBar {\n"
                                 "        background: rgb(187, 212, 238);\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        border-left: none;\n"
                                 "        border-right: none;\n"
                                 "}\n"
                                 "QMenuBar::item {\n"
                                 "        border: 1px solid transparent;\n"
                                 "        padding: 5px 10px 5px 10px;\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "QMenuBar::item:enabled {\n"
                                 "        color: rgb(2, 65, 132);\n"
                                 "}\n"
                                 "QMenuBar::item:!enabled {\n"
                                 "        color: rgb(155, 155, 155);\n"
                                 "}\n"
                                 "QMenuBar::item:enabled:selected {\n"
                                 "        border-top-color: rgb(111, 156, 207);\n"
                                 "        border-bottom-color: rgb(111, 156, 207);\n"
                                 "        background: rgb(198, 224, 252);\n"
                                 "}\n"
                                 "\n"
                                 "/**********菜单**********/\n"
                                 "QMenu {\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        background: rgb(232, 241, 250);\n"
                                 "}\n"
                                 "QMenu::item {\n"
                                 "        height: 32px;\n"
                                 "        padding: 0px 25px 0px 20px;\n"
                                 "}\n"
                                 "QMenu::item:enabled {\n"
                                 "        color: rgb(84, 84, 84);\n"
                                 "}\n"
                                 "QMenu::item:!enabled {\n"
                                 "        color: rgb(155, 155, 155);\n"
                                 "}\n"
                                 "QMenu::item:enabled:selected {\n"
                                 "        color: rgb(2, 65, 132);\n"
                                 "        background: rgba(255, 255, 255, 200);\n"
                                 "}\n"
                                 "QMenu::separator {\n"
                                 "        height: 1px;\n"
                                 "        background: rgb(111, 156, 207);\n"
                                 "}\n"
                                 "QMenu::indicator {\n"
                                 "        width: 13px;\n"
                                 "        height: 13px;\n"
                                 "}\n"
                                 "QMenu::icon {\n"
                                 "        padding-left: 2px;\n"
                                 "        padding-right: 2px;\n"
                                 "}\n"
                                 "\n"
                                 "/**********状态栏**********/\n"
                                 "QStatusBar {\n"
                                 "        background: rgb(187, 212, 238);\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        border-left: none;\n"
                                 "        border-right: none;\n"
                                 "        border-bottom: none;\n"
                                 "}\n"
                                 "QStatusBar::item {\n"
                                 "    border: none;\n"
                                 "    border-right: 1px solid rgb(111, 156, 207);\n"
                                 "}\n"
                                 "\n"
                                 "/**********分组框**********/\n"
                                 "QGroupBox {\n"
                                 "        font-size: 15px;\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        border-radius: 4px;\n"
                                 "        margin-top: 10px;\n"
                                 "}\n"
                                 "QGroupBox::title {\n"
                                 "        color: rgb(56, 99, 154);\n"
                                 "        top: -12px;\n"
                                 "        left: 10px;\n"
                                 "}\n"
                                 "\n"
                                 "/**********页签项**********/\n"
                                 "QTabWidget::pane {\n"
                                 "        border: none;\n"
                                 "        border-top: 3px solid rgb(0, 78, 161);\n"
                                 "        background: rgb(187, 212, 238);\n"
                                 "}\n"
                                 "QTabWidget::tab-bar {\n"
                                 "        border: none;\n"
                                 "}\n"
                                 "QTabBar::tab {\n"
                                 "        border: none;\n"
                                 "        border-top-left-radius: 4px;\n"
                                 "        border-top-right-radius: 4px;\n"
                                 "        color: white;\n"
                                 "        background: rgb(120, 170, 220);\n"
                                 "        height: 28px;\n"
                                 "        min-width: 85px;\n"
                                 "        margin-right: 5px;\n"
                                 "        padding-left: 5px;\n"
                                 "        padding-right: 5px;\n"
                                 "}\n"
                                 "QTabBar::tab:hover {\n"
                                 "        background: rgb(0, 78, 161);\n"
                                 "}\n"
                                 "QTabBar::tab:selected {\n"
                                 "        color: white;\n"
                                 "        background: rgb(0, 78, 161);\n"
                                 "}\n"
                                 "\n"
                                 "QTabWidget#tabWidget::pane {\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        background: rgb(232, 241, 252);\n"
                                 "        margin-top: -1px;\n"
                                 "}\n"
                                 "\n"
                                 "QTabBar#tabBar::tab {\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        border-bottom: none;\n"
                                 "        color: rgb(70, 71, 73);\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "QTabBar#tabBar::tab:hover {\n"
                                 "        color: rgb(2, 65, 132);\n"
                                 "}\n"
                                 "QTabBar#tabBar::tab:selected {\n"
                                 "        color: rgb(2, 65, 132);\n"
                                 "        background: rgb(232, 241, 252);\n"
                                 "}\n"
                                 "\n"
                                 "/**********表头**********/\n"
                                 "QHeaderView{\n"
                                 "        border: none;\n"
                                 "        border-bottom: 3px solid rgb(0, 78, 161);\n"
                                 "        background: transparent;\n"
                                 "        min-height: 30px;\n"
                                 "}\n"
                                 "QHeaderView::section:horizontal {\n"
                                 "        border: none;\n"
                                 "        color: rgb(2, 65, 132);\n"
                                 "        background: transparent;\n"
                                 "        padding-left: 5px;\n"
                                 "}\n"
                                 "QHeaderView::section:horizontal:hover {\n"
                                 "        color: white;\n"
                                 "        background: rgb(0, 78, 161);\n"
                                 "}\n"
                                 "QHeaderView::section:horizontal:pressed {\n"
                                 "        color: white;\n"
                                 "        background: rgb(6, 94, 187);\n"
                                 "}\n"
                                 "QHeaderView::up-arrow {\n"
                                 "        width: 13px;\n"
                                 "        height: 11px;\n"
                                 "        padding-right: 5px;\n"
                                 "        image: url(:/White/topArrow);\n"
                                 "        subcontrol-position: center right;\n"
                                 "}\n"
                                 "QHeaderView::up-arrow:hover, QHeaderView::up-arrow:pressed {\n"
                                 "        image: url(:/White/topArrowHover);\n"
                                 "}\n"
                                 "QHeaderView::down-arrow {\n"
                                 "        width: 13px;\n"
                                 "        height: 11px;\n"
                                 "        padding-right: 5px;\n"
                                 "        image: url(:/White/bottomArrow);\n"
                                 "        subcontrol-position: center right;\n"
                                 "}\n"
                                 "QHeaderView::down-arrow:hover, QHeaderView::down-arrow:pressed {\n"
                                 "        image: url(:/White/bottomArrowHover);\n"
                                 "}\n"
                                 "\n"
                                 "/**********表格**********/\n"
                                 "QTableView {\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        background: rgb(224, 238, 255);\n"
                                 "        gridline-color: rgb(111, 156, 207);\n"
                                 "}\n"
                                 "QTableView::item {\n"
                                 "        padding-left: 5px;\n"
                                 "        padding-right: 5px;\n"
                                 "        border: none;\n"
                                 "        background: white;\n"
                                 "        border-right: 1px solid rgb(111, 156, 207);\n"
                                 "        border-bottom: 1px solid rgb(111, 156, 207);\n"
                                 "}\n"
                                 "QTableView::item:selected {\n"
                                 "        background: rgba(255, 255, 255, 100);\n"
                                 "        color: black;\n"
                                 "}\n"
                                 "QTableView::item:selected:!active {\n"
                                 "        color: black;\n"
                                 "}\n"
                                 "QTableView::indicator {\n"
                                 "        width: 20px;\n"
                                 "        height: 20px;\n"
                                 "}\n"
                                 "QTableView::indicator:enabled:unchecked {\n"
                                 "        image: url(:/White/checkBox);\n"
                                 "}\n"
                                 "QTableView::indicator:enabled:unchecked:hover {\n"
                                 "        image: url(:/White/checkBoxHover);\n"
                                 "}\n"
                                 "QTableView::indicator:enabled:unchecked:pressed {\n"
                                 "        image: url(:/White/checkBoxPressed);\n"
                                 "}\n"
                                 "QTableView::indicator:enabled:checked {\n"
                                 "        image: url(:/White/checkBoxChecked);\n"
                                 "}\n"
                                 "QTableView::indicator:enabled:checked:hover {\n"
                                 "        image: url(:/White/checkBoxCheckedHover);\n"
                                 "}\n"
                                 "QTableView::indicator:enabled:checked:pressed {\n"
                                 "        image: url(:/White/checkBoxCheckedPressed);\n"
                                 "}\n"
                                 "QTableView::indicator:enabled:indeterminate {\n"
                                 "        image: url(:/White/checkBoxIndeterminate);\n"
                                 "}\n"
                                 "QTableView::indicator:enabled:indeterminate:hover {\n"
                                 "        image: url(:/White/checkBoxIndeterminateHover);\n"
                                 "}\n"
                                 "QTableView::indicator:enabled:indeterminate:pressed {\n"
                                 "        image: url(:/White/checkBoxIndeterminatePressed);\n"
                                 "}\n"
                                 "\n"
                                 "/**********滚动条-水平**********/\n"
                                 "QScrollBar:horizontal {\n"
                                 "        height: 20px;\n"
                                 "        background: transparent;\n"
                                 "        margin-top: 3px;\n"
                                 "        margin-bottom: 3px;\n"
                                 "}\n"
                                 "QScrollBar::handle:horizontal {\n"
                                 "        height: 20px;\n"
                                 "        min-width: 30px;\n"
                                 "        background: rgb(170, 200, 230);\n"
                                 "        margin-left: 15px;\n"
                                 "        margin-right: 15px;\n"
                                 "}\n"
                                 "QScrollBar::handle:horizontal:hover {\n"
                                 "        background: rgb(165, 195, 225);\n"
                                 "}\n"
                                 "QScrollBar::sub-line:horizontal {\n"
                                 "        width: 15px;\n"
                                 "        background: transparent;\n"
                                 "        image: url(:/White/arrowLeft);\n"
                                 "        subcontrol-position: left;\n"
                                 "}\n"
                                 "QScrollBar::add-line:horizontal {\n"
                                 "        width: 15px;\n"
                                 "        background: transparent;\n"
                                 "        image: url(:/White/arrowRight);\n"
                                 "        subcontrol-position: right;\n"
                                 "}\n"
                                 "QScrollBar::sub-line:horizontal:hover {\n"
                                 "        background: rgb(170, 200, 230);\n"
                                 "}\n"
                                 "QScrollBar::add-line:horizontal:hover {\n"
                                 "        background: rgb(170, 200, 230);\n"
                                 "}\n"
                                 "QScrollBar::add-page:horizontal,QScrollBar::sub-page:horizontal {\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "\n"
                                 "/**********滚动条-垂直**********/\n"
                                 "QScrollBar:vertical {\n"
                                 "        width: 20px;\n"
                                 "        background: transparent;\n"
                                 "        margin-left: 3px;\n"
                                 "        margin-right: 3px;\n"
                                 "}\n"
                                 "QScrollBar::handle:vertical {\n"
                                 "        width: 20px;\n"
                                 "        min-height: 30px;\n"
                                 "        background: rgb(170, 200, 230);\n"
                                 "        margin-top: 15px;\n"
                                 "        margin-bottom: 15px;\n"
                                 "}\n"
                                 "QScrollBar::handle:vertical:hover {\n"
                                 "        background: rgb(165, 195, 225);\n"
                                 "}\n"
                                 "QScrollBar::sub-line:vertical {\n"
                                 "        height: 15px;\n"
                                 "        background: transparent;\n"
                                 "        image: url(:/White/topArrow);\n"
                                 "        subcontrol-position: top;\n"
                                 "}\n"
                                 "QScrollBar::add-line:vertical {\n"
                                 "        height: 15px;\n"
                                 "        background: transparent;\n"
                                 "        image: url(:/White/bottomArrow);\n"
                                 "        subcontrol-position: bottom;\n"
                                 "}\n"
                                 "QScrollBar::sub-line:vertical:hover {\n"
                                 "        background: rgb(170, 200, 230);\n"
                                 "}\n"
                                 "QScrollBar::add-line:vertical:hover {\n"
                                 "        background: rgb(170, 200, 230);\n"
                                 "}\n"
                                 "QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "\n"
                                 "QScrollBar#verticalScrollBar:vertical {\n"
                                 "        margin-top: 30px;\n"
                                 "}\n"
                                 "\n"
                                 "/**********下拉列表**********/\n"
                                 "QComboBox {\n"
                                 "        height: 25px;\n"
                                 "        width : 3.5em; "
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        background: white;\n"
                                 "}\n"
                                 "QComboBox:enabled {\n"
                                 "        color: rgb(84, 84, 84);\n"
                                 "}\n"
                                 "QComboBox:!enabled {\n"
                                 "        color: rgb(80, 80, 80);\n"
                                 "}\n"
                                 "QComboBox:enabled:hover, QComboBox:enabled:focus {\n"
                                 "        color: rgb(51, 51, 51);\n"
                                 "}\n"
                                 "QComboBox::drop-down {\n"
                                 "        width: 20px;\n"
                                 "        border: none;\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "QComboBox::drop-down:hover {\n"
                                 "        background: rgba(255, 255, 255, 30);\n"
                                 "}\n"
                                 "QComboBox::down-arrow {\n"
                                 "        image: url(:/image/add_bottom.png);\n"
                                 "}\n"
                                 "QComboBox::down-arrow:on {\n"
                                 "        /**top: 1px;**/\n"
                                 "}\n"
                                 "QComboBox QAbstractItemView {\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        background: white;\n"
                                 "        outline: none;\n"
                                 "}\n"
                                 "QComboBox QAbstractItemView::item {\n"
                                 "        height: 25px;\n"
                                 "        color: rgb(73, 73, 73);\n"
                                 "}\n"
                                 "QComboBox QAbstractItemView::item:selected {\n"
                                 "        background: rgb(232, 241, 250);\n"
                                 "        color: rgb(2, 65, 132);\n"
                                 "}\n"
                                 "\n"
                                 "/**********进度条**********/\n"
                                 "QProgressBar{\n"
                                 "        border: none;\n"
                                 "        text-align: center;\n"
                                 "        color: white;\n"
                                 "        background: rgb(173, 202, 232);\n"
                                 "}\n"
                                 "QProgressBar::chunk {\n"
                                 "        background: rgb(16, 135, 209);\n"
                                 "}\n"
                                 "\n"
                                 "QProgressBar#progressBar {\n"
                                 "        border: none;\n"
                                 "        text-align: center;\n"
                                 "        color: white;\n"
                                 "        background-color: transparent;\n"
                                 "        background-image: url(\":/White/progressBar\");\n"
                                 "        background-repeat: repeat-x;\n"
                                 "}\n"
                                 "QProgressBar#progressBar::chunk {\n"
                                 "        border: none;\n"
                                 "        background-color: transparent;\n"
                                 "        background-image: url(\":/White/progressBarChunk\");\n"
                                 "        background-repeat: repeat-x;\n"
                                 "}\n"
                                 "\n"
                                 "/**********复选框**********/\n"
                                 "QCheckBox{\n"
                                 "        spacing: 5px;\n"
                                 "}\n"
                                 "QCheckBox:enabled:checked{\n"
                                 "        color: rgb(2, 65, 132);\n"
                                 "}\n"
                                 "QCheckBox:enabled:!checked{\n"
                                 "        color: rgb(70, 71, 73);\n"
                                 "}\n"
                                 "QCheckBox:enabled:hover{\n"
                                 "        color: rgb(0, 78, 161);\n"
                                 "}\n"
                                 "QCheckBox:!enabled{\n"
                                 "        color: rgb(80, 80, 80);\n"
                                 "}\n"
                                 "QCheckBox::indicator {\n"
                                 "        width: 20px;\n"
                                 "        height: 20px;\n"
                                 "}\n"
                                 "QCheckBox::indicator:unchecked {\n"
                                 "        image: url(:/White/checkBox);\n"
                                 "}\n"
                                 "QCheckBox::indicator:unchecked:hover {\n"
                                 "        image: url(:/White/checkBoxHover);\n"
                                 "}\n"
                                 "QCheckBox::indicator:unchecked:pressed {\n"
                                 "        image: url(:/White/checkBoxPressed);\n"
                                 "}\n"
                                 "QCheckBox::indicator:checked {\n"
                                 "        image: url(:/White/checkBoxChecked);\n"
                                 "}\n"
                                 "QCheckBox::indicator:checked:hover {\n"
                                 "        image: url(:/White/checkBoxCheckedHover);\n"
                                 "}\n"
                                 "QCheckBox::indicator:checked:pressed {\n"
                                 "        image: url(:/White/checkBoxCheckedPressed);\n"
                                 "}\n"
                                 "QCheckBox::indicator:indeterminate {\n"
                                 "        image: url(:/White/checkBoxIndeterminate);\n"
                                 "}\n"
                                 "QCheckBox::indicator:indeterminate:hover {\n"
                                 "        image: url(:/White/checkBoxIndeterminateHover);\n"
                                 "}\n"
                                 "QCheckBox::indicator:indeterminate:pressed {\n"
                                 "        image: url(:/White/checkBoxIndeterminatePressed);\n"
                                 "}\n"
                                 "\n"
                                 "/**********单选框**********/\n"
                                 "QRadioButton{\n"
                                 "        spacing: 5px;\n"
                                 "}\n"
                                 "QRadioButton:enabled:checked{\n"
                                 "        color: rgb(2, 65, 132);\n"
                                 "}\n"
                                 "QRadioButton:enabled:!checked{\n"
                                 "        color: rgb(70, 71, 73);\n"
                                 "}\n"
                                 "QRadioButton:enabled:hover{\n"
                                 "        color: rgb(0, 78, 161);\n"
                                 "}\n"
                                 "QRadioButton:!enabled{\n"
                                 "        color: rgb(80, 80, 80);\n"
                                 "}\n"
                                 "QRadioButton::indicator {\n"
                                 "        width: 20px;\n"
                                 "        height: 20px;\n"
                                 "}\n"
                                 "QRadioButton::indicator:unchecked {\n"
                                 "        image: url(:/White/radioButton);\n"
                                 "}\n"
                                 "QRadioButton::indicator:unchecked:hover {\n"
                                 "        image: url(:/White/radioButtonHover);\n"
                                 "}\n"
                                 "QRadioButton::indicator:unchecked:pressed {\n"
                                 "        image: url(:/White/radioButtonPressed);\n"
                                 "}\n"
                                 "QRadioButton::indicator:checked {\n"
                                 "        image: url(:/White/radioButtonChecked);\n"
                                 "}\n"
                                 "QRadioButton::indicator:checked:hover {\n"
                                 "        image: url(:/White/radioButtonCheckedHover);\n"
                                 "}\n"
                                 "QRadioButton::indicator:checked:pressed {\n"
                                 "        image: url(:/White/radioButtonCheckedPressed);\n"
                                 "}\n"
                                 "\n"
                                 "/**********输入框**********/\n"
                                 "QLineEdit {\n"
                                 "        border-radius: 4px;\n"
                                 "        height: 25px;\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        background: white;\n"
                                 "}\n"
                                 "QLineEdit:enabled {\n"
                                 "        color: rgb(84, 84, 84);\n"
                                 "}\n"
                                 "QLineEdit:enabled:hover, QLineEdit:enabled:focus {\n"
                                 "        color: rgb(51, 51, 51);\n"
                                 "}\n"
                                 "QLineEdit:!enabled {\n"
                                 "        color: rgb(80, 80, 80);\n"
                                 "}\n"
                                 "\n"
                                 "/**********文本编辑框**********/\n"
                                 "QTextEdit {\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        color: rgb(70, 71, 73);\n"
                                 "        background: rgb(187, 212, 238);\n"
                                 "}\n"
                                 "\n"
                                 "/**********滚动区域**********/\n"
                                 "QScrollArea {\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        background: rgb(187, 212, 238);\n"
                                 "}\n"
                                 "\n"
                                 "/**********滚动区域**********/\n"
                                 "QWidget#transparentWidget {\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "\n"
                                 "/**********微调器**********/\n"
                                 "QSpinBox {\n"
                                 "        border-radius: 4px;\n"
                                 "        height: 24px;\n"
                                 "        min-width: 40px;\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        background: white;\n"
                                 "}\n"
                                 "QSpinBox:enabled {\n"
                                 "        color: rgb(60, 60, 60);\n"
                                 "}\n"
                                 "QSpinBox:enabled:hover, QSpinBox:enabled:focus {\n"
                                 "        color: rgb(51, 51, 51);\n"
                                 "}\n"
                                 "QSpinBox:!enabled {\n"
                                 "        color: rgb(210, 210, 210);\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "QSpinBox::up-button {\n"
                                 "        border-left: 1px solid rgb(111, 156, 207);\n"
                                 "        width: 18px;\n"
                                 "        height: 12px;\n"
                                 "        border-top-right-radius: 4px;\n"
                                 "        image: url(:/White/upButton);\n"
                                 "}\n"
                                 "QSpinBox::up-button:!enabled {\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "QSpinBox::up-button:enabled:hover {\n"
                                 "        background: rgb(255, 255, 255, 30);\n"
                                 "}\n"
                                 "QSpinBox::down-button {\n"
                                 "        border-left: 1px solid rgb(111, 156, 207);\n"
                                 "        width: 18px;\n"
                                 "        height: 12px;\n"
                                 "        border-bottom-right-radius: 4px;\n"
                                 "        image: url(:/White/downButton);\n"
                                 "}\n"
                                 "QSpinBox::down-button:!enabled {\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "QSpinBox::down-button:hover {\n"
                                 "        background: rgb(255, 255, 255, 30);\n"
                                 "}\n"
                                 "\n"
                                 "/**********标签**********/\n"
                                 "QLabel#grayLabel {\n"
                                 "        color: rgb(70, 71, 73);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#label_departure_transit {\n"
                                 "        color: black;\n"
                                 "        font: light;\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#redLabel {\n"
                                 "        color: red;\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#grayYaHeiLabel {\n"
                                 "        color: rgb(175, 175, 175);\n"
                                 "        font-size: 16px;\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#blueLabel {\n"
                                 "        color: rgb(0, 160, 230);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#listLabel {\n"
                                 "        color: rgb(51, 51, 51);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#lineBlueLabel {\n"
                                 "        background: rgb(0, 78, 161);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#graySeperateLabel {\n"
                                 "        background: rgb(200, 220, 230);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#seperateLabel {\n"
                                 "        background: rgb(112, 153, 194);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#radiusBlueLabel {\n"
                                 "        border-radius: 15px;\n"
                                 "        color: white;\n"
                                 "        font-size: 16px;\n"
                                 "        background: rgb(0, 78, 161);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#skinLabel[colorProperty=\"normal\"] {\n"
                                 "        color: rgb(56, 99, 154);\n"
                                 "}\n"
                                 "QLabel#skinLabel[colorProperty=\"highlight\"] {\n"
                                 "        color: rgb(0, 160, 230);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#informationLabel {\n"
                                 "        qproperty-pixmap: url(:/White/information);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#errorLabel {\n"
                                 "        qproperty-pixmap: url(:/White/error);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#successLabel {\n"
                                 "        qproperty-pixmap: url(:/White/success);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#questionLabel {\n"
                                 "        qproperty-pixmap: url(:/White/question);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#warningLabel {\n"
                                 "        qproperty-pixmap: url(:/White/warning);\n"
                                 "}\n"
                                 "\n"
                                 "QLabel#groupLabel {\n"
                                 "        color: rgb(56, 99, 154);\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        font-size: 15px;\n"
                                 "        border-top-color: transparent;\n"
                                 "        border-right-color: transparent;\n"
                                 "        border-left-color: transparent;\n"
                                 "}\n"
                                 "\n"
                                 "/**********按钮**********/\n"
                                 "QToolButton \n"
                                 "{\n"
                                 "        border: none;\n"
                                 "        color: rgb(2, 65, 132);\n"
                                 "        background: transparent;\n"
                                 "        padding: 10px;\n"
                                 "        qproperty-iconSize: 32px 32px;\n"
                                 "        qproperty-toolButtonStyle: ToolButtonTextUnderIcon;\n"
                                 "}\n"
                                 "QToolButton#nsccButton:hover {\n"
                                 "        background: rgb(187, 212, 238);\n"
                                 "}\n"
                                 "\n"
                                 "QToolButton#transferButton {\n"
                                 "        border: none;\n"
                                 "        color: rgb(2, 65, 132);\n"
                                 "        background: transparent;\n"
                                 "        padding: 10px;\n"
                                 "        qproperty-icon: url(:/White/transfer);\n"
                                 "        qproperty-iconSize: 32px 32px;\n"
                                 "        qproperty-toolButtonStyle: ToolButtonTextUnderIcon;\n"
                                 "}\n"
                                 "QToolButton#transferButton:hover {\n"
                                 "        background: rgb(187, 212, 238);\n"
                                 "}\n"
                                 "\n"
                                 "/**********按钮**********/\n"
                                 "QPushButton{\n"
                                 "        border-radius: 4px;\n"
                                 "        border: none;\n"
                                 "        width: 75px;\n"
                                 "        height: 25px;\n"
                                 "}\n"
                                 "QPushButton:enabled {\n"
                                 "        background: rgb(120, 170, 220);\n"
                                 "        color: white;\n"
                                 "}\n"
                                 "QPushButton:!enabled {\n"
                                 "        background: rgb(180, 180, 180);\n"
                                 "        color: white;\n"
                                 "}\n"
                                 "QPushButton:enabled:hover{\n"
                                 "        background: rgb(100, 160, 220);\n"
                                 "}\n"
                                 "QPushButton:enabled:pressed{\n"
                                 "        background: rgb(0, 78, 161);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#blueButton {\n"
                                 "        color: white;\n"
                                 "}\n"
                                 "QPushButton#blueButton:enabled {\n"
                                 "        background: rgb(0, 78, 161);\n"
                                 "        color: white;\n"
                                 "}\n"
                                 "QPushButton:!enabled {\n"
                                 "        background: rgb(180, 180, 180);\n"
                                 "        color: white;\n"
                                 "}\n"
                                 "QPushButton#blueButton:enabled:hover {\n"
                                 "        background: rgb(2, 65, 132);\n"
                                 "}\n"
                                 "QPushButton#blueButton:enabled:pressed {\n"
                                 "        background: rgb(6, 94, 187);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#Search {\n"
                                 "        border-left: 1px solid rgb(111, 156, 207);\n"
                                 "        background: rgb(30, 144, 255);\n"
                                 "        color: white;\n"
                                 "}\n"
                                 "QPushButton#Search:enabled:hover{\n"
                                 "        background: rgb(187, 212, 238);\n"
                                 "}\n"
                                 "QPushButton#Search:enabled:pressed{\n"
                                 "        background: rgb(120, 170, 220);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#linkButton {\n"
                                 "        background: transparent;\n"
                                 "        color: rgb(0, 160, 230);\n"
                                 "        text-align:left;\n"
                                 "}\n"
                                 "QPushButton#linkButton:hover {\n"
                                 "        color: rgb(20, 185, 255);\n"
                                 "        text-decoration: underline;\n"
                                 "}\n"
                                 "QPushButton#linkButton:pressed {\n"
                                 "        color: rgb(0, 160, 230);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#transparentButton {\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "\n"
                                 "/*****************标题栏按钮*******************/\n"
                                 "QPushButton#minimizeButton {\n"
                                 "        border-radius: none;\n"
                                 "        border-bottom-left-radius: 4px;\n"
                                 "        border-bottom-right-radius: 4px;\n"
                                 "        background: rgb(120, 170, 220);\n"
                                 "        image: url(:/White/minimizeHover);\n"
                                 "}\n"
                                 "QPushButton#minimizeButton:hover {\n"
                                 "        image: url(:/White/minimize);\n"
                                 "}\n"
                                 "QPushButton#minimizeButton:pressed {\n"
                                 "        image: url(:/White/minimizePressed);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#maximizeButton[maximizeProperty=\"maximize\"] {\n"
                                 "        border-radius: none;\n"
                                 "        border-bottom-left-radius: 4px;\n"
                                 "        border-bottom-right-radius: 4px;\n"
                                 "        background: rgb(120, 170, 220);\n"
                                 "        image: url(:/White/maximizeHover);\n"
                                 "}\n"
                                 "QPushButton#maximizeButton[maximizeProperty=\"maximize\"]:hover {\n"
                                 "        image: url(:/White/maximize);\n"
                                 "}\n"
                                 "QPushButton#maximizeButton[maximizeProperty=\"maximize\"]:pressed {\n"
                                 "        image: url(:/White/maximizePressed);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#maximizeButton[maximizeProperty=\"restore\"] {\n"
                                 "        border-radius: none;\n"
                                 "        border-bottom-left-radius: 4px;\n"
                                 "        border-bottom-right-radius: 4px;\n"
                                 "        background: rgb(120, 170, 220);\n"
                                 "        image: url(:/White/restoreHover);\n"
                                 "}\n"
                                 "QPushButton#maximizeButton[maximizeProperty=\"restore\"]:hover {\n"
                                 "        image: url(:/White/restore);\n"
                                 "}\n"
                                 "QPushButton#maximizeButton[maximizeProperty=\"restore\"]:pressed {\n"
                                 "        image: url(:/White/restorePressed);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#closeButton {\n"
                                 "        border-radius: none;\n"
                                 "        border-bottom-left-radius: 4px;\n"
                                 "        border-bottom-right-radius: 4px;\n"
                                 "        background: rgb(120, 170, 220);\n"
                                 "        image: url(:/White/closeHover);\n"
                                 "}\n"
                                 "QPushButton#closeButton:hover {\n"
                                 "        image: url(:/White/close);\n"
                                 "}\n"
                                 "QPushButton#closeButton:pressed {\n"
                                 "        image: url(:/White/closePressed);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#skinButton {\n"
                                 "        border-radius: none;\n"
                                 "        border-bottom-left-radius: 4px;\n"
                                 "        border-bottom-right-radius: 4px;\n"
                                 "        background: rgb(120, 170, 220);\n"
                                 "        image: url(:/White/skinHover);\n"
                                 "}\n"
                                 "QPushButton#skinButton:hover {\n"
                                 "        image: url(:/White/skin);\n"
                                 "}\n"
                                 "QPushButton#skinButton:pressed {\n"
                                 "        image: url(:/White/skinPressed);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#feedbackButton {\n"
                                 "        border-radius: none;\n"
                                 "        border-bottom-left-radius: 4px;\n"
                                 "        border-bottom-right-radius: 4px;\n"
                                 "        background: rgb(120, 170, 220);\n"
                                 "        image: url(:/White/feedbackHover);\n"
                                 "}\n"
                                 "QPushButton#feedbackButton:hover {\n"
                                 "        image: url(:/White/feedback);\n"
                                 "}\n"
                                 "QPushButton#feedbackButton:pressed {\n"
                                 "        image: url(:/White/feedbackPressed);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#closeTipButton {\n"
                                 "        border-radius: none;\n"
                                 "        border-image: url(:/White/close);\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "QPushButton#closeTipButton:hover {\n"
                                 "        border-image: url(:/White/closeHover);\n"
                                 "}\n"
                                 "QPushButton#closeTipButton:pressed {\n"
                                 "        border-image: url(:/White/closePressed);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#changeSkinButton{\n"
                                 "        border-radius: 4px;\n"
                                 "        border: 2px solid rgb(111, 156, 207);\n"
                                 "        background: rgb(204, 227, 252);\n"
                                 "}\n"
                                 "QPushButton#changeSkinButton:hover{\n"
                                 "        border-color: rgb(60, 150, 200);\n"
                                 "}\n"
                                 "QPushButton#changeSkinButton:pressed, QPushButton#changeSkinButton:checked{\n"
                                 "        border-color: rgb(0, 160, 230);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#transferButton {\n"
                                 "        padding-left: 5px;\n"
                                 "        padding-right: 5px;\n"
                                 "        color: white;\n"
                                 "        background: rgb(0, 78, 161);\n"
                                 "}\n"
                                 "QPushButton#transferButton:hover {\n"
                                 "        background: rgb(2, 65, 132);\n"
                                 "}\n"
                                 "QPushButton#transferButton:pressed {\n"
                                 "        background: rgb(6, 94, 187);\n"
                                 "}\n"
                                 "QPushButton#transferButton[iconProperty=\"left\"] {\n"
                                 "        qproperty-icon: url(:/White/left);\n"
                                 "}\n"
                                 "QPushButton#transferButton[iconProperty=\"right\"] {\n"
                                 "        qproperty-icon: url(:/White/right);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#openButton {\n"
                                 "        border-radius: none;\n"
                                 "        image: url(:/White/open);\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "QPushButton#openButton:hover {\n"
                                 "        image: url(:/White/openHover);\n"
                                 "}\n"
                                 "QPushButton#openButton:pressed {\n"
                                 "        image: url(:/White/openPressed);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#deleteButton {\n"
                                 "        border-radius: none;\n"
                                 "        image: url(:/White/delete);\n"
                                 "        background: transparent;\n"
                                 "}\n"
                                 "QPushButton#deleteButton:hover {\n"
                                 "        image: url(:/White/deleteHover);\n"
                                 "}\n"
                                 "QPushButton#deleteButton:pressed {\n"
                                 "        image: url(:/White/deletePressed);\n"
                                 "}\n"
                                 "\n"
                                 "QPushButton#menuButton {\n"
                                 "        text-align: left center;\n"
                                 "        padding-left: 3px;\n"
                                 "        color: rgb(84, 84, 84);\n"
                                 "        border: 1px solid rgb(111, 156, 207);\n"
                                 "        background: white;\n"
                                 "}\n"
                                 "QPushButton#menuButton::menu-indicator{\n"
                                 "        subcontrol-position: right center;\n"
                                 "        subcontrol-origin: padding;\n"
                                 "        image: url(:/White/arrowBottom);\n"
                                 "        padding-right: 3px;\n"
                                 "}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_departure = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_departure.sizePolicy().hasHeightForWidth())
        self.label_departure.setSizePolicy(sizePolicy)
        self.label_departure.setAlignment(QtCore.Qt.AlignCenter)
        self.label_departure.setObjectName("label_departure")
        self.horizontalLayout_2.addWidget(self.label_departure)
        self.comboBox_departure = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_departure.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_departure.sizePolicy().hasHeightForWidth())
        self.comboBox_departure.setSizePolicy(sizePolicy)
        self.comboBox_departure.setEditable(False)
        self.comboBox_departure.setObjectName("comboBox_departure")
        self.comboBox_departure.addItem("")
        self.comboBox_departure.addItem("")
        self.comboBox_departure.addItem("")
        self.comboBox_departure.addItem("")
        self.comboBox_departure.addItem("")
        self.comboBox_departure.addItem("")
        self.comboBox_departure.addItem("")
        self.comboBox_departure.addItem("")
        self.comboBox_departure.addItem("")
        self.comboBox_departure.addItem("")
        self.comboBox_departure.addItem("")
        self.horizontalLayout_2.addWidget(self.comboBox_departure)
        self.label_destination = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_destination.sizePolicy().hasHeightForWidth())
        self.label_destination.setSizePolicy(sizePolicy)
        self.label_destination.setAlignment(QtCore.Qt.AlignCenter)
        self.label_destination.setObjectName("label_destination")
        self.horizontalLayout_2.addWidget(self.label_destination)
        self.comboBox_destination = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_destination.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBox_destination.sizePolicy().hasHeightForWidth())
        self.comboBox_destination.setSizePolicy(sizePolicy)
        self.comboBox_destination.setEditable(False)
        self.comboBox_destination.setObjectName("comboBox_destination")
        self.comboBox_destination.addItem("")
        self.comboBox_destination.addItem("")
        self.comboBox_destination.addItem("")
        self.comboBox_destination.addItem("")
        self.comboBox_destination.addItem("")
        self.comboBox_destination.addItem("")
        self.comboBox_destination.addItem("")
        self.comboBox_destination.addItem("")
        self.comboBox_destination.addItem("")
        self.comboBox_destination.addItem("")
        self.comboBox_destination.addItem("")
        self.horizontalLayout_2.addWidget(self.comboBox_destination)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_date = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_date.sizePolicy().hasHeightForWidth())
        self.label_date.setSizePolicy(sizePolicy)
        self.label_date.setAlignment(QtCore.Qt.AlignCenter)
        self.label_date.setObjectName("label_date")
        self.horizontalLayout_4.addWidget(self.label_date)
        self.dateEdit = QtWidgets.QDateEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dateEdit.sizePolicy().hasHeightForWidth())
        self.dateEdit.setSizePolicy(sizePolicy)
        self.dateEdit.setDateTime(QtCore.QDateTime(QtCore.QDate(2019, 1, 1), QtCore.QTime(0, 0, 0)))
        self.dateEdit.setMaximumDateTime(QtCore.QDateTime(QtCore.QDate(2019, 12, 31), QtCore.QTime(23, 59, 59)))
        self.dateEdit.setMinimumDateTime(QtCore.QDateTime(QtCore.QDate(2019, 1, 1), QtCore.QTime(0, 0, 0)))
        self.dateEdit.setCalendarPopup(True)
        self.dateEdit.setObjectName("dateEdit")
        self.horizontalLayout_4.addWidget(self.dateEdit)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label_class = QtWidgets.QLabel(self.centralwidget)
        self.label_class.setAlignment(QtCore.Qt.AlignCenter)
        self.label_class.setObjectName("label_class")
        self.horizontalLayout_5.addWidget(self.label_class)
        self.comboBox_class = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_class.setObjectName("comboBox_class")
        self.comboBox_class.addItem("")
        self.comboBox_class.addItem("")
        self.comboBox_class.addItem("")
        self.horizontalLayout_5.addWidget(self.comboBox_class)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        self.Search = QtWidgets.QPushButton(self.centralwidget)
        self.Search.setObjectName("Search")
        self.verticalLayout.addWidget(self.Search)
        self.pushbutton_buy = QtWidgets.QPushButton(self.centralwidget)
        self.pushbutton_buy.setObjectName("pushbutton_buy")
        self.verticalLayout.addWidget(self.pushbutton_buy)
        self.horizontalLayout.addLayout(self.verticalLayout)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.horizontalLayout.addItem(spacerItem)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_departure_arrival = QtWidgets.QLabel(self.centralwidget)
        self.label_departure_arrival.setObjectName("label_departure_arrival")
        self.verticalLayout_2.addWidget(self.label_departure_arrival)
        self.tableView_departure_arrival = QtWidgets.QTableView(self.centralwidget)
        self.tableView_departure_arrival.setObjectName("tableView_departure_arrival")
        self.verticalLayout_2.addWidget(self.tableView_departure_arrival)
        self.label_departure_transit = QtWidgets.QLabel(self.centralwidget)
        self.label_departure_transit.setObjectName("label_departure_transit")
        self.verticalLayout_2.addWidget(self.label_departure_transit)
        self.tableView_departure_transit = QtWidgets.QTableView(self.centralwidget)
        self.tableView_departure_transit.setObjectName("tableView_departure_transit")
        self.verticalLayout_2.addWidget(self.tableView_departure_transit)
        self.label_transit_arrival = QtWidgets.QLabel(self.centralwidget)
        self.label_transit_arrival.setObjectName("label_transit_arrival")
        self.verticalLayout_2.addWidget(self.label_transit_arrival)
        self.tableView_transit_destination = QtWidgets.QTableView(self.centralwidget)
        self.tableView_transit_destination.setObjectName("tableView_transit_destination")
        self.verticalLayout_2.addWidget(self.tableView_transit_destination)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        self.gridLayout.addLayout(self.horizontalLayout, 2, 0, 1, 1)
        self.label_user = QtWidgets.QLabel(self.centralwidget)
        self.label_user.setObjectName("label_user")
        self.gridLayout.addWidget(self.label_user, 0, 0, 1, 1)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1600, 22))
        self.menubar.setObjectName("menubar")
        self.menu_register_login = QtWidgets.QMenu(self.menubar)
        self.menu_register_login.setObjectName("menu_register_login")
        self.menu_function = QtWidgets.QMenu(self.menubar)
        self.menu_function.setObjectName("menu_function")
        self.menu_user = QtWidgets.QMenu(self.menu_function)
        self.menu_user.setObjectName("menu_user")
        self.menu_administrator = QtWidgets.QMenu(self.menu_function)
        self.menu_administrator.setEnabled(True)
        self.menu_administrator.setObjectName("menu_administrator")
        MainWindow.setMenuBar(self.menubar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.toolBar_2 = QtWidgets.QToolBar(MainWindow)
        self.toolBar_2.setObjectName("toolBar_2")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar_2)
        self.toolBar_3 = QtWidgets.QToolBar(MainWindow)
        self.toolBar_3.setObjectName("toolBar_3")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar_3)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.actionregister = QtWidgets.QAction(MainWindow)
        self.actionregister.setObjectName("actionregister")
        self.actionbuy = QtWidgets.QAction(MainWindow)
        self.actionbuy.setObjectName("actionbuy")
        self.action_alter_info = QtWidgets.QAction(MainWindow)
        self.action_alter_info.setObjectName("action_alter_info")
        self.actiond_my_ticket = QtWidgets.QAction(MainWindow)
        self.actiond_my_ticket.setObjectName("actiond_my_ticket")
        self.action_add_flight = QtWidgets.QAction(MainWindow)
        self.action_add_flight.setEnabled(True)
        self.action_add_flight.setObjectName("action_add_flight")
        self.actionlogin = QtWidgets.QAction(MainWindow)
        self.actionlogin.setObjectName("actionlogin")
        self.action_alter_flight = QtWidgets.QAction(MainWindow)
        self.action_alter_flight.setObjectName("action_alter_flight")
        self.actionquit = QtWidgets.QAction(MainWindow)
        self.actionquit.setObjectName("actionquit")
        self.actionchangefly = QtWidgets.QAction(MainWindow)
        self.actionchangefly.setObjectName("actionchangefly")
        self.action_ad_search = QtWidgets.QAction(MainWindow)
        self.action_ad_search.setObjectName("action_ad_search")
        self.actions_change_plane = QtWidgets.QAction(MainWindow)
        self.actions_change_plane.setObjectName("actions_change_plane")
        self.actions_change_plane_type = QtWidgets.QAction(MainWindow)
        self.actions_change_plane_type.setObjectName("actions_change_plane_type")
        self.actions_change_airport = QtWidgets.QAction(MainWindow)
        self.actions_change_airport.setObjectName("actions_change_airport")
        self.menu_register_login.addAction(self.actionregister)
        self.menu_register_login.addAction(self.actionlogin)
        self.menu_register_login.addAction(self.actionquit)
        self.menu_user.addAction(self.action_alter_info)
        self.menu_user.addAction(self.actiond_my_ticket)
        self.menu_administrator.addAction(self.action_ad_search)
        self.menu_administrator.addAction(self.action_add_flight)
        self.menu_administrator.addAction(self.action_alter_flight)
        self.menu_administrator.addAction(self.actionchangefly)
        self.menu_administrator.addAction(self.actions_change_plane)
        self.menu_administrator.addAction(self.actions_change_plane_type)
        self.menu_administrator.addAction(self.actions_change_airport)
        self.menu_function.addAction(self.menu_user.menuAction())
        self.menu_function.addSeparator()
        self.menu_function.addAction(self.menu_administrator.menuAction())
        self.menubar.addAction(self.menu_register_login.menuAction())
        self.menubar.addAction(self.menu_function.menuAction())

        self.toolBar.hide()
        self.toolBar_2.hide()
        self.toolBar_3.hide()
        self.retranslateUi(MainWindow)
        self.connect_items()
        self.tableView_departure_arrival.setEditTriggers((QAbstractItemView.NoEditTriggers))  # 防修改
        self.tableView_departure_transit.setEditTriggers((QAbstractItemView.NoEditTriggers))
        self.tableView_transit_destination.setEditTriggers((QAbstractItemView.NoEditTriggers))
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "航空票务系统  -V 1.0.0"))
        self.label_departure.setText(_translate("MainWindow", "出发地"))
        self.comboBox_departure.setCurrentText(_translate("MainWindow", "北京"))
        self.comboBox_departure.setItemText(0, _translate("MainWindow", "北京"))
        self.comboBox_departure.setItemText(1, _translate("MainWindow", "成都"))
        self.comboBox_departure.setItemText(2, _translate("MainWindow", "香港"))
        self.comboBox_departure.setItemText(3, _translate("MainWindow", "哈尔滨"))
        self.comboBox_departure.setItemText(4, _translate("MainWindow", "海南"))
        self.comboBox_departure.setItemText(5, _translate("MainWindow", "上海"))
        self.comboBox_departure.setItemText(6, _translate("MainWindow", "长春"))
        self.comboBox_departure.setItemText(7, _translate("MainWindow", "兰州"))
        self.comboBox_departure.setItemText(8, _translate("MainWindow", "广州"))
        self.comboBox_departure.setItemText(9, _translate("MainWindow", "长沙"))
        self.comboBox_departure.setItemText(10, _translate("MainWindow", "南昌"))
        self.label_destination.setText(_translate("MainWindow", "目的地"))
        self.comboBox_destination.setItemText(0, _translate("MainWindow", "北京"))
        self.comboBox_destination.setItemText(1, _translate("MainWindow", "成都"))
        self.comboBox_destination.setItemText(2, _translate("MainWindow", "香港"))
        self.comboBox_destination.setItemText(3, _translate("MainWindow", "哈尔滨"))
        self.comboBox_destination.setItemText(4, _translate("MainWindow", "海南"))
        self.comboBox_destination.setItemText(5, _translate("MainWindow", "上海"))
        self.comboBox_destination.setItemText(6, _translate("MainWindow", "长春"))
        self.comboBox_destination.setItemText(7, _translate("MainWindow", "兰州"))
        self.comboBox_destination.setItemText(8, _translate("MainWindow", "广州"))
        self.comboBox_destination.setItemText(9, _translate("MainWindow", "长沙"))
        self.comboBox_destination.setItemText(10, _translate("MainWindow", "南昌"))
        self.label_date.setText(_translate("MainWindow", "日期"))
        self.label_class.setText(_translate("MainWindow", "舱位"))
        self.comboBox_class.setItemText(0, _translate("MainWindow", "头等舱"))
        self.comboBox_class.setItemText(1, _translate("MainWindow", "商务舱"))
        self.comboBox_class.setItemText(2, _translate("MainWindow", "经济舱"))
        self.Search.setText(_translate("MainWindow", "搜索"))
        self.pushbutton_buy.setText(_translate("MainWindow", "购买"))
        self.label_departure_arrival.setText(_translate("MainWindow", "出发 - 到达："))
        self.label_departure_transit.setText(_translate("MainWindow", "出发 - 经停："))
        self.label_transit_arrival.setText(_translate("MainWindow", "经停 - 到达："))
        self.label_user.setText(_translate("MainWindow", "未登录，登陆后获得更多权限"))
        self.menu_register_login.setTitle(_translate("MainWindow", "注册"))
        self.menu_function.setTitle(_translate("MainWindow", "功能"))
        self.menu_user.setTitle(_translate("MainWindow", "用户"))
        self.menu_administrator.setTitle(_translate("MainWindow", "管理员"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.toolBar_2.setWindowTitle(_translate("MainWindow", "toolBar_2"))
        self.toolBar_3.setWindowTitle(_translate("MainWindow", "toolBar_3"))
        self.actionregister.setText(_translate("MainWindow", "用户注册"))
        self.actionbuy.setText(_translate("MainWindow", "机票购买"))
        self.action_alter_info.setText(_translate("MainWindow", "修改个人信息"))
        self.actiond_my_ticket.setText(_translate("MainWindow", "我的机票"))
        self.action_add_flight.setText(_translate("MainWindow", "添加航程"))
        self.actionlogin.setText(_translate("MainWindow", "用户/管理员登录"))
        self.action_alter_flight.setText(_translate("MainWindow", "查看\\修改航程"))
        self.actionquit.setText(_translate("MainWindow", "退出登录"))
        self.actionchangefly.setText(_translate("MainWindow", "查看\\修改航班"))
        self.action_ad_search.setText(_translate("MainWindow", "查看乘客信息"))
        self.actions_change_plane.setText(_translate("MainWindow", "查看\\修改飞机信息"))
        self.actions_change_plane_type.setText(_translate("MainWindow", "查看\\修改飞机机型"))
        self.actions_change_airport.setText(_translate("MainWindow", "查看\\修改机场信息"))

    def connect_items(self):
        self.actions_change_plane.triggered.connect(self.open_change_plane)
        self.actions_change_plane_type.triggered.connect(self.open_change_plane_type)
        self.actions_change_airport.triggered.connect(self.open_change_airport)
        self.actionquit.triggered.connect(self.quit_login)
        self.action_alter_flight.triggered.connect(self.open_change_flight)
        self.Search.clicked.connect(self.searchresult)
        self.actiond_my_ticket.triggered.connect(self.open_mytickets)
        self.action_alter_info.triggered.connect(self.open_alter_info)
        # self.login.clicked.connect(self.open_login)
        self.pushbutton_buy.clicked.connect(self.jump_buy)
        self.actionregister.triggered.connect(self.open_register)
        self.actionlogin.triggered.connect(self.open_login)
        # self.register_2.clicked.connect(self.open_register)
        self.action_add_flight.triggered.connect(self.open_add_flight)
        self.action_ad_search.triggered.connect(self.open_ad_search)
        self.tableView_departure_arrival.clicked.connect(self.da)
        self.tableView_departure_transit.clicked.connect(self.dt)
        self.tableView_transit_destination.clicked.connect(self.ta)
        self.tableView_departure_arrival.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.tableView_transit_destination.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.tableView_departure_transit.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.actionchangefly.triggered.connect(self.open_change_fly)

    def open_mytickets(self):
        if (self.power != 1):
            reply = QMessageBox.warning(self, "提示", "请用户先登录,再查看购票历史！", QMessageBox.Ok)
        else:
            my_ticket = MyTickets_Window()
            my_ticket.username = self.username
            my_ticket.exec_()

    def quit_login(self):
        if self.power != 0:
            if QMessageBox.information(self,
                                    "提示",
                                    "您确定要退出登录吗",
                                    QMessageBox.Yes|QMessageBox.No) == QMessageBox.Yes:
                str = "未登录，登陆后获得更多权限"
                self.username = ''
                self.power = 0
                QMessageBox.information(self,
                                        "提示",
                                        "成功退出登录！",
                                        QMessageBox.Ok)
                str = "未登录，登陆后获得更多权限"
                self.label_user.setText(QtCore.QCoreApplication.translate("MainWindow", str))
        else:
            QMessageBox.warning(self,
                                "警告",
                                "您还未登录！",
                                QMessageBox.Ok)
            pass
        pass

    def open_change_fly(self):
        if self.power == 2:
            change_fly_window = Change_Fly_Window()
            change_fly_window.exec_()
        elif self.power == 0:
            QMessageBox.warning(self,
                                "警告",
                                "您还未登录，请登录后使用该功能！",
                                QMessageBox.Ok)
        elif self.power == 1:
            QMessageBox.warning(self,
                                "警告",
                                "您不具备管理员权限！",
                                QMessageBox.Ok)
            pass
        pass

    pass

    def open_change_plane_type(self):
        if self.power == 2:
            change_plane_type_window = Change_Plane_Type_Window()
            change_plane_type_window.exec_()
        elif self.power == 0:
            QMessageBox.warning(self,
                                "警告",
                                "您还未登录，请登录后使用该功能！",
                                QMessageBox.Ok)
        elif self.power == 1:
            QMessageBox.warning(self,
                                "警告",
                                "您不具备管理员权限！",
                                QMessageBox.Ok)
            pass
        pass

    pass

    def open_change_plane(self):
        if self.power == 2:
            change_plane_window = Change_Plane_Window()
            change_plane_window.exec_()
        elif self.power == 0:
            QMessageBox.warning(self,
                                "警告",
                                "您还未登录，请登录后使用该功能！",
                                QMessageBox.Ok)
        elif self.power == 1:
            QMessageBox.warning(self,
                                "警告",
                                "您不具备管理员权限！",
                                QMessageBox.Ok)
            pass
        pass
    pass

    def open_change_airport(self):
        if self.power == 2:
            change_airport_window = Change_Airport_Window()
            change_airport_window.exec_()
        elif self.power == 0:
            QMessageBox.warning(self,
                                "警告",
                                "您还未登录，请登录后使用该功能！",
                                QMessageBox.Ok)
        elif self.power == 1:
            QMessageBox.warning(self,
                                "警告",
                                "您不具备管理员权限！",
                                QMessageBox.Ok)

    def open_change_flight(self):
        if self.power == 2:
            change_flight_window = Change_Flight_Window()
            change_flight_window.exec_()
        elif self.power == 0:
            QMessageBox.warning(self,
                                "警告",
                                "您还未登录，请登录后使用该功能！",
                                QMessageBox.Ok)
        elif self.power == 1:
            QMessageBox.warning(self,
                                "警告",
                                "您不具备管理员权限！",
                                QMessageBox.Ok)

    def open_login(self, MainWindow):
        if self.power == 0:
            login_window = Login_Window()
            login_window.exec_()
            self.username = login_window.username
            self.power = login_window.power
            if self.power == 1:
                str = "用户：" + self.username + "，欢迎使用本系统！"
                self.label_user.setText(QtCore.QCoreApplication.translate("MainWindow", str))
            if self.power == 2:
                str = "管理员：" + self.username + "，欢迎使用本系统！"
                self.label_user.setText(QtCore.QCoreApplication.translate("MainWindow", str))
        else:
            QMessageBox.warning(self, "提示", "您已登录，请先退出登录！", QMessageBox.Ok)

    def open_register(self):
        register_window = Register_Window()
        register_window.exec_()

    def open_alter_info(self):
        if (self.power != 1):
            QMessageBox.warning(self, "提示", "请用户先登录后再修改您的信息！", QMessageBox.Ok)
        else:
            alter_info_window = Alter_Info_Window()

            alter_info_window.exec_()

    def open_add_flight(self):
        if self.power == 2:
            add_flight_window = Add_Flight_Window()
            add_flight_window.exec_()
        elif self.power == 0:
            QMessageBox.warning(self,
                                "警告",
                                "您还未登录，请登录后使用该功能！",
                                QMessageBox.Ok)
        elif self.power == 1:
            QMessageBox.warning(self,
                                "警告",
                                "您不具备管理员权限！",
                                QMessageBox.Ok)

    def open_ad_search(self):
        if self.power == 2:
            ad_search_window = Ad_Search_Window()
            ad_search_window.exec_()
        elif self.power == 0:
            QMessageBox.warning(self,
                                "警告",
                                "您还未登录，请登录后使用该功能！",
                                QMessageBox.Ok)
        elif self.power == 1:
            QMessageBox.warning(self,
                                "警告",
                                "您不具备管理员权限！",
                                QMessageBox.Ok)

    def jump_buy(self):
        if (self.power < 1):
            reply = QMessageBox.warning(self,
                                        "提示",
                                        "请先登录后再购票！",
                                        QMessageBox.Ok)
        elif (self.power ==2 ):
            reply = QMessageBox.warning(self,
                                        "提示",
                                        "您是管理员，请作为用户登录后订票！",
                                        QMessageBox.Ok)
        elif (self.state == -1):
            reply = QMessageBox.warning(self,
                                        "提示",
                                        "请选取要买的票！",
                                        QMessageBox.Ok)
        else:
            jump_buy_window = Jump_Buy_Window()
            jump_buy_window.state = self.state
            jump_buy_window.num = self.num
            jump_buy_window.username = self.username
            tacket = self.remain_tacket(self.num)
            jump_buy_window.remain_num.setText(str(tacket))
            jump_buy_window.exec_()
            self.state = -1

    def da(self):
        self.state = 0
        self.index = self.tableView_departure_arrival.currentIndex().row()
        # print(self.index)
        model = self.tableView_departure_arrival.model()
        index = model.index(self.index, 0)
        self.num = model.data(index)
        # print(data)

    def dt(self):
        self.state = 1
        self.index = self.tableView_departure_transit.currentIndex().row()
        # print(self.index)
        model = self.tableView_departure_transit.model()
        index = model.index(self.index, 0)
        self.num = model.data(index)

    def ta(self):
        self.state = 2
        self.index = self.tableView_transit_destination.currentIndex().row()
        # print(self.index)
        model = self.tableView_transit_destination.model()
        index = model.index(self.index, 0)
        self.num = model.data(index)

    def searchresult(self):
        self.state = -1
        query_flight_dt = QSqlQuery()
        query_flight_dt.prepare('SELECT 航班编号 FROM 航班 '
                                'WHERE 航班.出发机场代码 in (SELECT 机场代码 FROM 机场 where 所在城市 = :departure) '
                                'and 航班.经停机场代码 in (SELECT 机场代码 FROM 机场 where 所在城市 = :destination)')
        query_flight_dt.bindValue(":departure", self.comboBox_departure.currentText())
        query_flight_dt.bindValue(":destination", self.comboBox_destination.currentText())  # 绑定占位符和相应的功能
        query_flight_dt.exec_()
        flight_dt = '('
        while query_flight_dt.next():
            flight_dt += "'" + query_flight_dt.value(0) + "'"
            if query_flight_dt.next():
                flight_dt += ","
                query_flight_dt.previous()
        flight_dt += ")"  # flight ： (A, B, ....)

        self.model1 = QSqlTableModel()
        self.tableView_departure_transit.setModel(self.model1)
        self.model1.setTable('飞行计划安排')
        self.model1.setFilter("航班编号 in %s and DATEDIFF(DAYOFYEAR, '%s', 计划出发时间) = 0 and [%s（开始-经停）剩余座位] > 0 "
                              % (flight_dt, self.dateEdit.date().toString("yyyy-MM-dd"),
                                 self.comboBox_class.currentText()))
        self.model1.select()

        self.tableView_departure_transit.hideColumn(4)
        self.tableView_departure_transit.hideColumn(5)
        self.tableView_departure_transit.hideColumn(6)
        self.tableView_departure_transit.hideColumn(7)
        self.tableView_departure_transit.hideColumn(8)
        self.tableView_departure_transit.hideColumn(9)
        self.tableView_departure_transit.hideColumn(10)
        self.tableView_departure_transit.hideColumn(11)
        self.tableView_departure_transit.hideColumn(15)
        self.tableView_departure_transit.hideColumn(17)
        self.tableView_departure_transit.hideColumn(18)
        self.tableView_departure_transit.hideColumn(20)
        self.tableView_departure_transit.hideColumn(21)
        self.tableView_departure_transit.hideColumn(23)
        if self.comboBox_class.currentText() == "头等舱":
            self.tableView_departure_transit.hideColumn(16)
            self.tableView_departure_transit.hideColumn(19)
            self.tableView_departure_transit.hideColumn(12)
            self.tableView_departure_transit.hideColumn(13)
        elif self.comboBox_class.currentText() == "经济舱":
            self.tableView_departure_transit.hideColumn(19)
            self.tableView_departure_transit.hideColumn(22)
            self.tableView_departure_transit.hideColumn(13)
            self.tableView_departure_transit.hideColumn(14)
        else:
            self.tableView_departure_transit.hideColumn(16)
            self.tableView_departure_transit.hideColumn(22)
            self.tableView_departure_transit.hideColumn(12)
            self.tableView_departure_transit.hideColumn(14)

        self.tableView_departure_transit.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.tableView_departure_transit.horizontalHeader().setSectionResizeMode(0, QHeaderView.Interactive)
        self.tableView_departure_transit.horizontalHeader().setSectionResizeMode(1, QHeaderView.Interactive)
        self.tableView_departure_transit.horizontalHeader().setSectionResizeMode(2, QHeaderView.Interactive)
        self.tableView_departure_transit.horizontalHeader().setSectionResizeMode(3, QHeaderView.Interactive)
        self.tableView_departure_transit.setColumnWidth(0, 90)
        self.tableView_departure_transit.setColumnWidth(1, 90)
        self.tableView_departure_transit.setColumnWidth(2, 200)
        self.tableView_departure_transit.setColumnWidth(3, 210)
        self.tableView_departure_transit.show()

        query_flight = QSqlQuery()  # 新建QSqlQuery对象
        query_flight.prepare('SELECT 航班编号 FROM 航班 '
                             'WHERE 航班.出发机场代码 in (SELECT 机场代码 FROM 机场 where 所在城市 = :departure) '
                             'and 航班.到达机场代码 in (SELECT 机场代码 FROM 机场 where 所在城市 = :destination)')  # 输入SQL语句
        query_flight.bindValue(":departure", self.comboBox_departure.currentText())
        query_flight.bindValue(":destination", self.comboBox_destination.currentText())  # 绑定占位符和相应的功能
        query_flight.exec_()  # 执行
        flight = "("
        while query_flight.next():
            flight += "'" + query_flight.value(0) + "'"
            if query_flight.next():
                flight += ","
                query_flight.previous()
        flight += ")"  # flight ： (A, B, ....)

        self.model = QSqlTableModel()  # 新建SQLTableModel 对象
        self.tableView_departure_arrival.setModel(self.model)  # 绑定到tableView对象上
        self.model.setTable('飞行计划安排')  # 相当于 from 语句
        self.model.setFilter("航班编号 in %s and DATEDIFF(DAYOFYEAR, '%s', 计划出发时间) = 0 and [%s（开始-到达）剩余座位] > 0 "
                             % (flight, self.dateEdit.date().toString("yyyy-MM-dd"),
                                self.comboBox_class.currentText()))  # 相当于where语句
        # self.model.setFilter("DATEDIFF(DAYOFYEAR, '%s', 计划出发时间) = 0" % (self.dateEdit.date().toString("yyyy-MM-dd") ))

        # print(self.model.filter())
        self.model.select()  # 执行SQL select
        self.tableView_departure_arrival.hideColumn(3)
        self.tableView_departure_arrival.hideColumn(4)
        self.tableView_departure_arrival.hideColumn(9)
        self.tableView_departure_arrival.hideColumn(10)
        self.tableView_departure_arrival.hideColumn(11)
        self.tableView_departure_arrival.hideColumn(12)
        self.tableView_departure_arrival.hideColumn(13)
        self.tableView_departure_arrival.hideColumn(14)
        self.tableView_departure_arrival.hideColumn(16)
        self.tableView_departure_arrival.hideColumn(17)
        self.tableView_departure_arrival.hideColumn(19)
        self.tableView_departure_arrival.hideColumn(20)
        self.tableView_departure_arrival.hideColumn(22)
        self.tableView_departure_arrival.hideColumn(23)
        if self.comboBox_class.currentText() == "头等舱":
            self.tableView_departure_arrival.hideColumn(15)
            self.tableView_departure_arrival.hideColumn(18)
            self.tableView_departure_arrival.hideColumn(6)
            self.tableView_departure_arrival.hideColumn(7)
        elif self.comboBox_class.currentText() == "经济舱":
            self.tableView_departure_arrival.hideColumn(21)
            self.tableView_departure_arrival.hideColumn(18)
            self.tableView_departure_arrival.hideColumn(7)
            self.tableView_departure_arrival.hideColumn(8)
        else:
            self.tableView_departure_arrival.hideColumn(15)
            self.tableView_departure_arrival.hideColumn(21)
            self.tableView_departure_arrival.hideColumn(6)
            self.tableView_departure_arrival.hideColumn(8)

        # self.tableView_departure_arrival.setColumnWidth(3,200)
        self.tableView_departure_arrival.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.tableView_departure_arrival.horizontalHeader().setSectionResizeMode(0, QHeaderView.Interactive)
        self.tableView_departure_arrival.horizontalHeader().setSectionResizeMode(1, QHeaderView.Interactive)
        self.tableView_departure_arrival.horizontalHeader().setSectionResizeMode(2, QHeaderView.Interactive)
        self.tableView_departure_arrival.horizontalHeader().setSectionResizeMode(5, QHeaderView.Interactive)
        self.tableView_departure_arrival.setColumnWidth(0, 90)
        self.tableView_departure_arrival.setColumnWidth(1, 90)
        self.tableView_departure_arrival.setColumnWidth(2, 200)
        self.tableView_departure_arrival.setColumnWidth(5, 190)

        self.tableView_departure_arrival.show()  # 显示

        query_flight_ta = QSqlQuery()
        query_flight_ta.prepare('SELECT 航班编号 FROM 航班 '
                                'WHERE 航班.经停机场代码 in (SELECT 机场代码 FROM 机场 where 所在城市 = :departure) '
                                'and 航班.到达机场代码 in (SELECT 机场代码 FROM 机场 where 所在城市 = :destination)')
        query_flight_ta.bindValue(":departure", self.comboBox_departure.currentText())
        query_flight_ta.bindValue(":destination", self.comboBox_destination.currentText())  # 绑定占位符和相应的功能
        query_flight_ta.exec_()
        flight_ta = '('
        while query_flight_ta.next():
            flight_ta += "'" + query_flight_ta.value(0) + "'"
            if query_flight_ta.next():
                flight_ta += ","
                query_flight_ta.previous()
        flight_ta += ")"  # flight ： (A, B, ....)
        # print (flight_ta)

        self.model2 = QSqlTableModel()
        self.tableView_transit_destination.setModel(self.model2)
        self.model2.setTable('飞行计划安排')
        self.model2.setFilter("航班编号 in %s and DATEDIFF(DAYOFYEAR, '%s', 计划出发时间) = 0 and [%s（经停-到达）剩余座位] > 0 "
                              % (flight_ta, self.dateEdit.date().toString("yyyy-MM-dd"),
                                 self.comboBox_class.currentText()))
        # print(self.model2.filter())
        self.model2.select()

        self.tableView_transit_destination.hideColumn(2)
        self.tableView_transit_destination.hideColumn(3)
        self.tableView_transit_destination.hideColumn(6)
        self.tableView_transit_destination.hideColumn(7)
        self.tableView_transit_destination.hideColumn(8)
        self.tableView_transit_destination.hideColumn(12)
        self.tableView_transit_destination.hideColumn(13)
        self.tableView_transit_destination.hideColumn(14)
        self.tableView_transit_destination.hideColumn(15)
        self.tableView_transit_destination.hideColumn(16)
        self.tableView_transit_destination.hideColumn(18)
        self.tableView_transit_destination.hideColumn(19)
        self.tableView_transit_destination.hideColumn(21)
        self.tableView_transit_destination.hideColumn(22)
        if self.comboBox_class.currentText() == "头等舱":
            self.tableView_transit_destination.hideColumn(17)
            self.tableView_transit_destination.hideColumn(20)
            self.tableView_transit_destination.hideColumn(9)
            self.tableView_transit_destination.hideColumn(10)
        elif self.comboBox_class.currentText() == "经济舱":
            self.tableView_transit_destination.hideColumn(20)
            self.tableView_transit_destination.hideColumn(23)
            self.tableView_transit_destination.hideColumn(10)
            self.tableView_transit_destination.hideColumn(11)
        else:
            self.tableView_transit_destination.hideColumn(17)
            self.tableView_transit_destination.hideColumn(23)
            self.tableView_transit_destination.hideColumn(9)
            self.tableView_transit_destination.hideColumn(11)
        #
        self.tableView_transit_destination.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.tableView_transit_destination.horizontalHeader().setSectionResizeMode(0, QHeaderView.Interactive)
        self.tableView_transit_destination.horizontalHeader().setSectionResizeMode(1, QHeaderView.Interactive)
        self.tableView_transit_destination.horizontalHeader().setSectionResizeMode(4, QHeaderView.Interactive)
        self.tableView_transit_destination.horizontalHeader().setSectionResizeMode(5, QHeaderView.Interactive)
        self.tableView_transit_destination.setColumnWidth(0, 90)
        self.tableView_transit_destination.setColumnWidth(1, 90)
        self.tableView_transit_destination.setColumnWidth(4, 230)
        self.tableView_transit_destination.setColumnWidth(5, 190)
        self.tableView_transit_destination.show()

        if self.model.rowCount() + self.model1.rowCount() + self.model2.rowCount() == 0:
            QMessageBox.information(self, "提示", "没有符合条件的航班!", QMessageBox.Ok)
    def remain_tacket(self,num):
        tacket_num = ()
        conn = pyodbc.connect(
            'DRIVER={SQL SERVER NATIVE CLIENT 10.0};SERVER=127.0.0.1;DATABASE=air;UID=sa;PWD=123456')
        if (self.state == 0):
            sql = "select *"\
                  " from 飞行计划安排 inner join 航班 on 飞行计划安排.航班编号 = 航班.航班编号"\
                  " inner join 机场 on 机场代码 = 出发机场代码"\
                  " inner join 机场 as b on b.机场代码 = 到达机场代码"\
                  " where 航程号 = ?"
            cursor = conn.cursor()
            result = (cursor.execute(sql, num).fetchall())
            tacket_num = result[0][6:9]
        if (self.state == 1):
            sql = "select *"\
                  " from 飞行计划安排 inner join 航班 on 飞行计划安排.航班编号 = 航班.航班编号"\
                  " inner join 机场 on 机场代码 = 出发机场代码"\
                  " inner join 机场 as b on b.机场代码 = 经停机场代码"\
                  " where 航程号 = ?"
            cursor = conn.cursor()
            result = (cursor.execute(sql, num).fetchall())
            tacket_num = result[0][12:15]
        if (self.state == 2):
            sql = "select *"\
                  " from 飞行计划安排 inner join 航班 on 飞行计划安排.航班编号 = 航班.航班编号"\
                  " inner join 机场 on 机场代码 = 出发机场代码"\
                  " inner join 机场 as b on b.机场代码 = 经停机场代码"\
                  " where 航程号 = ?"
            cursor = conn.cursor()
            result = (cursor.execute(sql, num).fetchall())
            tacket_num = result[0][9:12]
        tacket = tacket_num[2]
        if (tacket is None):
            tacket = 0

        conn.close()
        return tacket

