# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'alter_info.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtWidgets import *
from PyQt5.QtSql import *
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QDialog
from PyQt5 import QtCore, QtGui, QtWidgets
import login

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(400, 300)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../icon/flight.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Dialog.setWindowIcon(icon)
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.lineEdit_password = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_password.setObjectName("lineEdit_password")
        self.verticalLayout.addWidget(self.lineEdit_password)
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.lineEdit_password2 = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_password2.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_password2.setObjectName("lineEdit_password2")
        self.verticalLayout.addWidget(self.lineEdit_password2)
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setObjectName("label_3")
        self.verticalLayout.addWidget(self.label_3)
        self.lineEdit_tel = QtWidgets.QLineEdit(Dialog)
        self.lineEdit_tel.setMaxLength(11)
        self.lineEdit_tel.setObjectName("lineEdit_tel")
        self.verticalLayout.addWidget(self.lineEdit_tel)
        self.pushButton_cancel = QtWidgets.QPushButton(Dialog)
        self.pushButton_cancel.setObjectName("pushButton_cancel")
        self.verticalLayout.addWidget(self.pushButton_cancel)
        self.pushButton_alter = QtWidgets.QPushButton(Dialog)
        self.pushButton_alter.setObjectName("pushButton_alter")
        self.verticalLayout.addWidget(self.pushButton_alter)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)
        self.pushButton_alter.clicked.connect(self.alter_info_check)
        self.pushButton_cancel.clicked.connect(self.window_close)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "用户信息修改"))
        self.label.setText(_translate("Dialog", "新密码"))
        self.lineEdit_password.setPlaceholderText(_translate("Dialog", "请输入登录密码"))
        self.label_2.setText(_translate("Dialog", "密码（请再输入一次）"))
        self.lineEdit_password2.setPlaceholderText(_translate("Dialog", "请再输入一次"))
        self.label_3.setText(_translate("Dialog", "联系方式"))
        self.lineEdit_tel.setPlaceholderText(_translate("Dialog", "请输入联系方式（长度小于等于11）"))
        self.pushButton_cancel.setText(_translate("Dialog", "取消"))
        self.pushButton_alter.setText(_translate("Dialog", "修改信息"))

    def alter_info_check(self):
        user_name = login.Ui_Dialog.username
        password = self.lineEdit_password.text()
        password_2 = self.lineEdit_password2.text()
        tel = self.lineEdit_tel.text()
        if (password == "" or tel == ""):
            QMessageBox.warning(self, "警告", "密码及联系方式不可为空!", QMessageBox.Ok)
            return
        elif (password != password_2):
            QMessageBox.warning(self, "警告","两次输入密码不一致!", QMessageBox.Ok)
            return
        # 进行数据库操作
        query = QSqlQuery()  # 新建sql对象
        query.prepare("UPDATE 用户表 SET 用户密码 = :password,用户联系方式 = :tel WHERE 用户名= :user_name")  # 输入SQL语句
        query.bindValue(":user_name", user_name)
        query.bindValue(":password", password)
        query.bindValue(":tel", tel)
        # 绑定占位符和相应的功能

        value = query.exec_()
        if (value):
            QMessageBox.information(self, "提示", "修改成功!", QMessageBox.Ok)
            self.close()
        else:
            QMessageBox.information(self, "提示", "修改失败！（已存在相同的用户名）", QMessageBox.Ok)

        return

    def window_close(self):
        self.close()