# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtWidgets import *
from PyQt5.QtSql import *
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Dialog(object):
    power = 0 #权限
    username = '' #用户名
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(410, 398)
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(Dialog)
        font = QtGui.QFont()
        font.setFamily("Adobe Devanagari")
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.user_name = QtWidgets.QLineEdit(Dialog)
        self.user_name.setObjectName("user_name")
        self.verticalLayout.addWidget(self.user_name)
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setObjectName("label_3")
        self.verticalLayout.addWidget(self.label_3)
        self.password = QtWidgets.QLineEdit(Dialog)
        self.password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.password.setObjectName("password")
        self.verticalLayout.addWidget(self.password)
        self.cancel = QtWidgets.QPushButton(Dialog)
        self.cancel.setObjectName("cancel")
        self.verticalLayout.addWidget(self.cancel)
        self.login = QtWidgets.QPushButton(Dialog)
        self.login.setObjectName("login")
        self.verticalLayout.addWidget(self.login)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.login.clicked.connect(self.login_check)
        self.cancel.clicked.connect(self.window_close)
        self.user_name.returnPressed.connect(self.login_check)
        self.password.returnPressed.connect(self.login_check)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "机票订购系统登录"))
        self.label_2.setText(_translate("Dialog", "用户名"))
        self.user_name.setPlaceholderText(_translate("Dialog", "请输入用户名"))
        self.label_3.setText(_translate("Dialog", "密码"))
        self.password.setPlaceholderText(_translate("Dialog", "请输入密码"))
        self.cancel.setText(_translate("Dialog", "取消"))
        self.login.setText(_translate("Dialog", "登录"))

    def login_check(self):
        user_name = self.user_name.text()
        password = self.password.text()
        if (user_name == "" or password == ""):
            print(QMessageBox.warning(self, "警告", "用户名和密码不可为空!", QMessageBox.Ok))
            return
        # 进行数据库操作
        query = QSqlQuery()  # 新建sql对象
        query.prepare('SELECT * FROM 用户表 '
                      'WHERE 用户名  = :user_name')  # 输入SQL语句
        query.bindValue(":user_name", user_name)  # 绑定占位符和相应的功能
        query.exec_()

        if (not query.next()):
            QMessageBox.information(self, "提示", "该账号不存在!", QMessageBox.Ok)
        else:
            if (user_name == query.value(0) and password == query.value(1)):

                if (query.value(2) == 1):
                    # 跳转到后续管理员窗口
                    QMessageBox.information(self, "提示", "登录成功!", QMessageBox.Ok)
                    self.power = 2
                    self.username = user_name
                    self.close()
                # 跳转到后续用户窗口
                else:
                    QMessageBox.information(self, "提示", "登录成功!", QMessageBox.Ok)
                    self.power = 1
                    self.username = user_name
                    self.close()
            else:
                QMessageBox.information(self, "提示", "密码错误!", QMessageBox.Ok)
        return

    def window_close(self):
        self.close()
    # 添加后续窗口